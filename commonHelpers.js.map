{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst input = document.querySelector('#datetime-picker')\nconst button = document.querySelector('button')\n// console.log(button)\n// console.log(input)\n\nlet userSelectedDate\nbutton.disabled = true\n// const today = new Date()\nlet ms\nlet interval\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n       \n        const today = new Date()\nif (selectedDates[0] >= today) {\n    userSelectedDate = selectedDates[0]\n    button.disabled = false\n}\nelse {\n    alert(\"Please choose a date in the future\");\n    button.disabled = true\n}\n      console.log(selectedDates[0]);\n    },\n  };\n\n\nconst instance = flatpickr(input, options)\n\nbutton.addEventListener('click', runTimer)\nfunction runTimer() {\n    if(userSelectedDate) {\n    interval = setInterval(() => {\n        const today = new Date()\n        ms = userSelectedDate - today\n        if (ms <= 0) {\n            clearInterval(interval)\n        return;}\n            const { days, hours, minutes, seconds } = convertMs(ms);\n\n            document.querySelector('[data-days]').textContent = addLeadingZero(days);\n                    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n                    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n                    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);}, 1000)}\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\n\n"],"names":["input","button","userSelectedDate","ms","interval","options","selectedDates","today","flatpickr","runTimer","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+EAGA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,QAAQ,EAI9C,IAAIC,EACJD,EAAO,SAAW,GAElB,IAAIE,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAEnB,MAAMC,EAAQ,IAAI,KACtBD,EAAc,CAAC,GAAKC,GACpBL,EAAmBI,EAAc,CAAC,EAClCL,EAAO,SAAW,KAGlB,MAAM,oCAAoC,EAC1CA,EAAO,SAAW,IAEhB,QAAQ,IAAIK,EAAc,CAAC,CAAC,CAC7B,CACL,EAGiBE,EAAUR,EAAOK,CAAO,EAEzCJ,EAAO,iBAAiB,QAASQ,CAAQ,EACzC,SAASA,GAAW,CACbP,IACHE,EAAW,YAAY,IAAM,CAGzB,GADAD,EAAKD,EADS,IAAI,KAEdC,GAAM,EAAG,CACT,cAAcC,CAAQ,EAC1B,MAAO,CACH,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUX,CAAE,EAEtD,SAAS,cAAc,aAAa,EAAE,YAAcY,EAAeL,CAAI,EAC/D,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAAE,EAAG,GAAI,EAC1G,CAEA,SAASE,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASF,EAAUX,EAAI,CAQnB,MAAMO,EAAO,KAAK,MAAMP,EAAK,KAAG,EAE1BQ,EAAQ,KAAK,MAAOR,EAAK,MAAO,IAAI,EAEpCS,EAAU,KAAK,MAAQT,EAAK,MAAO,KAAQ,GAAM,EAEjDU,EAAU,KAAK,MAASV,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}