{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\n// console.log(button)\n// console.log(input)\nbutton.disabled = true;\n\nlet userSelectedDate;\n// const today = new Date()\nlet ms;\nlet interval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const today = new Date();\n    if (selectedDates[0] >= today) {\n      userSelectedDate = selectedDates[0];\n      button.disabled = false;\n    } else {\n    //   alert('Please choose a date in the future');\n    iziToast.show({\n        title: 'Please choose a date in the future',\n    });\n    \n      button.disabled = true;\n    }\n    console.log(selectedDates[0]);\n  },\n};\n\nconst instance = flatpickr(input, options);\n\nbutton.addEventListener('click', runTimer);\nfunction runTimer() {\n  if (userSelectedDate) {\n    button.disabled = true;\n    input.disabled = true;\n    interval = setInterval(() => {\n      const today = new Date();\n      ms = userSelectedDate - today;\n      if (ms <= 0) {\n        clearInterval(interval);\n        button.disabled = true;\n        input.disabled = false;\n        return;\n      }\n      const { days, hours, minutes, seconds } = convertMs(ms);\n\n      document.querySelector('[data-days]').textContent = addLeadingZero(days);\n      document.querySelector('[data-hours]').textContent =\n        addLeadingZero(hours);\n      document.querySelector('[data-minutes]').textContent =\n        addLeadingZero(minutes);\n      document.querySelector('[data-seconds]').textContent =\n        addLeadingZero(seconds);\n    }, 1000);\n  }\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","button","userSelectedDate","ms","interval","options","selectedDates","today","iziToast","flatpickr","runTimer","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2FAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,QAAQ,EAG9CA,EAAO,SAAW,GAElB,IAAIC,EAEAC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAQ,IAAI,KACdD,EAAc,CAAC,GAAKC,GACtBL,EAAmBI,EAAc,CAAC,EAClCL,EAAO,SAAW,KAGpBO,EAAS,KAAK,CACV,MAAO,oCACf,CAAK,EAECP,EAAO,SAAW,IAEpB,QAAQ,IAAIK,EAAc,CAAC,CAAC,CAC7B,CACH,EAEiBG,EAAUT,EAAOK,CAAO,EAEzCJ,EAAO,iBAAiB,QAASS,CAAQ,EACzC,SAASA,GAAW,CACdR,IACFD,EAAO,SAAW,GAClBD,EAAM,SAAW,GACjBI,EAAW,YAAY,IAAM,CAG3B,GADAD,EAAKD,EADS,IAAI,KAEdC,GAAM,EAAG,CACX,cAAcC,CAAQ,EACtBH,EAAO,SAAW,GAClBD,EAAM,SAAW,GACjB,MACD,CACD,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUZ,CAAE,EAEtD,SAAS,cAAc,aAAa,EAAE,YAAca,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YACrCK,EAAeJ,CAAK,EACtB,SAAS,cAAc,gBAAgB,EAAE,YACvCI,EAAeH,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,CACzB,EAAE,GAAI,EAEX,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUZ,EAAI,CAQrB,MAAMQ,EAAO,KAAK,MAAMR,EAAK,KAAG,EAE1BS,EAAQ,KAAK,MAAOT,EAAK,MAAO,IAAI,EAEpCU,EAAU,KAAK,MAAQV,EAAK,MAAO,KAAQ,GAAM,EAEjDW,EAAU,KAAK,MAASX,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}